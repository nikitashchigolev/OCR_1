advance in engineertg software identification of the boundary surfaces in d finite element codes ireneusz szczygiel andrzej szlek ryszard bialecki andrzej j nowak institute of thermal technology silesian technical university konarskiego l gliwice poland for a given d fem net defined by domain connectivity array a boundary conncctivity array is generated the latter contains boundary nodes over which subsequent boundary elements are spanned an algorithm can be used t check the consistency of the input connectivity array t can also be useful in pre and postprocessors in hidden lines removal a list of appropnate routines is included introduction unpacking the domain connectivity matrix into faces connectivity matrix within this stage sub some applications of the finite element method demand sequent finite elements are converted into their integration over the boundary of the body under con faces the nodes over which the faces are spanned sideration to carry out this integration the boundary are stored in a face connectivity matrix surface should be defined by grouping the boundary ii processing the face connectivity matrix to find the nodes into boundary elements heat conduction boundary elements the nodes these elements are problems with boundary conditions of the third kind are spanned over are stored in the boundary connec typical example of this class of problem the standard tivity matrix approach used in structural mechanics of converting grouping the boundary elements into closed boundary loads into nodal forces has no simple equiv boundary surfaces alence in this case the appendix contains the list of appropriate routines the definition of the boundary surface can be also this computer implementation of the algorithm can deal uscful in input and output graphic programs where with linear nodes or quadratic nodes brick hidden line removal is often required the knowledge of elements as well as with all kinds of transition linear the bounding surfaces allows an efficient transition from quadralic ones the wireframe model defined by the domain connectivity the local nodes numbering pattern of a finite element array into solid model described by a boundary connec used in routines listed in the appendix is shown in fig tivity array the local numbers of nodes within face are shown in the domain connectivity array grouping the nodes other numbering schemes can be easily incor into finite elements comprises considerable portion of porated into the program data necded run a fem code and the chance of the first step of the algorithm is executed within the committing errors when preparing this matrix is high t routine unpack all faces bounding a given finite is therefore important t check consistency of this array element are generated from data stored in the domain the developca algorithm performs this task by cross connectivity matrix ix the scheme of unpacking checking whether thc surfaces generated by process elements into faces is coded by the local nodes numbcring ing the connecunty mainx are closed and band the pattern stored in the array facepattern initialized domain by data statement in the unpack routinc the result of the unpacking le the global numbers of nodes associated with given face are stored in thc face con descriftion of the algorithm matrix iface each colum f this mainx necuvity corresponds t one ace of hnite element the preeent papes isan xtension of previous onc dealing taces rc generaied bv elements having rianguiar tn rd problems t consists f three suages nodes an erampic f this kind f doubling appropnate clement is shown in fig n nich the acc denned itvener i extintrtint sofimurg ss has beca degencrated line elsavict sckntr publuter lid points jin fig fig